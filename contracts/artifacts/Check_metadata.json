{
	"compiler": {
<<<<<<< HEAD
		"version": "0.5.17+commit.d19bba13"
=======
		"version": "0.6.12+commit.27d51765"
>>>>>>> origin/test
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
<<<<<<< HEAD
				"constant": true,
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "_ctLogIDs",
						"type": "bytes32[]"
					},
					{
						"internalType": "bytes32[]",
=======
				"inputs": [
					{
						"internalType": "bytes32[]",
>>>>>>> origin/test
						"name": "_sctLogID",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_sctTimestamp",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
<<<<<<< HEAD
						"name": "_maximum_merge_delay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
=======
>>>>>>> origin/test
						"name": "_certValidFrom",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_certValidTo",
						"type": "uint256"
<<<<<<< HEAD
=======
					},
					{
						"internalType": "string",
						"name": "_ocspRes",
						"type": "string"
>>>>>>> origin/test
					}
				],
				"name": "check",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
<<<<<<< HEAD
				"payable": false,
=======
>>>>>>> origin/test
				"stateMutability": "view",
				"type": "function"
			},
			{
<<<<<<< HEAD
				"constant": false,
				"inputs": [],
				"name": "terminateCCP",
				"outputs": [],
				"payable": false,
=======
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "ctLogIDs",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maximum_merge_delay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ocspRes",
				"outputs": [
					{
						"internalType": "enum CheckAbstract.OCSPResponse",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "ocspResType",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "_ctLogIDs",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256",
						"name": "_maximum_merge_delay",
						"type": "uint256"
					}
				],
				"name": "setCTLogs",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "terminateCCP",
				"outputs": [],
>>>>>>> origin/test
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
<<<<<<< HEAD
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "verifyCCPAddress",
=======
				"inputs": [
					{
						"internalType": "address",
						"name": "_clientAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_ccpAddr",
						"type": "address"
					}
				],
				"name": "verifyCCP",
>>>>>>> origin/test
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
<<<<<<< HEAD
				"payable": false,
=======
>>>>>>> origin/test
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
<<<<<<< HEAD
			"methods": {}
		},
		"userdoc": {
			"methods": {}
=======
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
>>>>>>> origin/test
		}
	},
	"settings": {
		"compilationTarget": {
			"Check.sol": "Check"
		},
		"evmVersion": "istanbul",
		"libraries": {},
<<<<<<< HEAD
=======
		"metadata": {
			"bytecodeHash": "ipfs"
		},
>>>>>>> origin/test
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Check.sol": {
<<<<<<< HEAD
			"keccak256": "0x509c6da76c17975106e0d0fe10ffc054d7469c9a34bed9ddf641b77870b8f9f2",
			"urls": [
				"bzz-raw://cdc8f56d6c21f1aa000a670984dba907ea03411fdfe324794bb48780566a10bf",
				"dweb:/ipfs/QmfCsEzJ2RG3ws4eoprs28rHDTh9UgLcB1W2hCauYvncYt"
			]
		},
		"CheckInterface.sol": {
			"keccak256": "0x199529de84e3bc11276fd1776b5d3e8020cd3ba09cf74e1b0ffc877123c882c6",
			"urls": [
				"bzz-raw://06b85ad6bbef9b11dcebc2cff903a6775e646955a9fee900963e55c11f02a6cc",
				"dweb:/ipfs/QmaLRmtUeYfaCVtBQEFDd9rWA7bLctekcLuF4abEVmLko6"
=======
			"keccak256": "0xa1596d0c39df1fd17b165272d749641c0dc29ff69d5bc42b4250f4ceb8766f6d",
			"license": "MIT",
			"urls": [
				"bzz-raw://027dcdd6d2b37f4f884aa12a41f87c1af3f0c05e34fbb3d02700e4f4ba0829a0",
				"dweb:/ipfs/QmNv4C7JFMGG7PLipA5qvADEc3cxsWnR9vab7ZsDim9Cwd"
			]
		},
		"CheckAbstract.sol": {
			"keccak256": "0x0425f6ae223979a0f81d9af4a21e9af4796f5de10cfc38bcba70e2edf1b88f92",
			"license": "MIT",
			"urls": [
				"bzz-raw://e28d7dcaf7aef15382058690f115158963e2efdb97d9137689ffe06a8fefc203",
				"dweb:/ipfs/Qmbm2qPHnhPt86yZUW17dQBw3xiEMj9spxQDtQ4pqs2Qo1"
>>>>>>> origin/test
			]
		}
	},
	"version": 1
}